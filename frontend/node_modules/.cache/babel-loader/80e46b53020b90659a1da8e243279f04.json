{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\"; //===================================================================================//\n//===================================================================================//\n\nexport const setCryptoData = () => async dispatch => {\n  const payload = await axios.get(\"http://localhost:3001/api/crypto/ranking\"); // const payload = await axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=1&sparkline=false&price_change_percentage=24h\");\n\n  const getStartUpData = await axios.get(`https://api.coingecko.com/api/v3/coins/bitcoin`); // console.log(getStartUpData)\n\n  dispatch({\n    type: actionTypes.SET_CRYPTO_DATA,\n    newCryptoDataArr: payload.data,\n    newSelectedCryptoDisplay: {\n      name: 'bitcoin',\n      data: getStartUpData.data\n    }\n  });\n}; //===================================================================================//\n//===================================================================================//\n\nexport const addCryptoData = id => async dispatch => {\n  const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n  dispatch({\n    type: actionTypes.ADD_CRYPTO_DATA,\n    newCryptoData: payload.data\n  });\n}; //===================================================================================//\n//===================================================================================//\n\nexport const showCryptoData = id => async dispatch => {\n  const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n  dispatch({\n    type: actionTypes.SHOW_CRYPTO_DATA_DISPLAY,\n    newSelectedCryptoDisplay: {\n      name: payload.data.id,\n      data: payload.data\n    }\n  });\n};\nexport const getHistoricalPriceData = id => async dispatch => {\n  const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=1`);\n  dispatch({\n    type\n  });\n};","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/store/actions/actionCreators.js"],"names":["axios","actionTypes","setCryptoData","dispatch","payload","get","getStartUpData","type","SET_CRYPTO_DATA","newCryptoDataArr","data","newSelectedCryptoDisplay","name","addCryptoData","id","ADD_CRYPTO_DATA","newCryptoData","showCryptoData","SHOW_CRYPTO_DATA_DISPLAY","getHistoricalPriceData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAGA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACjD,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,0CAAV,CAAtB,CADiD,CAEjD;;AACA,QAAMC,cAAc,GAAG,MAAMN,KAAK,CAACK,GAAN,CAAW,gDAAX,CAA7B,CAHiD,CAI7C;;AACJF,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEN,WAAW,CAACO,eADb;AAELC,IAAAA,gBAAgB,EAAEL,OAAO,CAACM,IAFrB;AAGLC,IAAAA,wBAAwB,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBF,MAAAA,IAAI,EAAEJ,cAAc,CAACI;AAAxC;AAHrB,GAAD,CAAR;AAMH,CAXM,C,CAaP;AACA;;AAEA,OAAO,MAAMG,aAAa,GAAIC,EAAD,IAAQ,MAAMX,QAAN,IAAkB;AACnD,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,0CAAyCS,EAAG,EAAvD,CAAtB;AAEAX,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEN,WAAW,CAACc,eADb;AAELC,IAAAA,aAAa,EAAEZ,OAAO,CAACM;AAFlB,GAAD,CAAR;AAIH,CAPM,C,CAUP;AACA;;AACA,OAAO,MAAMO,cAAc,GAAIH,EAAD,IAAQ,MAAMX,QAAN,IAAkB;AACpD,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,0CAAyCS,EAAG,EAAvD,CAAtB;AAEAX,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEN,WAAW,CAACiB,wBADb;AAELP,IAAAA,wBAAwB,EAAE;AAAEC,MAAAA,IAAI,EAAER,OAAO,CAACM,IAAR,CAAaI,EAArB;AAAyBJ,MAAAA,IAAI,EAAEN,OAAO,CAACM;AAAvC;AAFrB,GAAD,CAAR;AAKH,CARM;AAUP,OAAO,MAAMS,sBAAsB,GAAIL,EAAD,IAAQ,MAAMX,QAAN,IAAkB;AAC5D,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,0CAAyCS,EAAG,sCAAvD,CAAtB;AAEAX,EAAAA,QAAQ,CAAC;AACLI,IAAAA;AADK,GAAD,CAAR;AAIH,CAPM","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\n\n//===================================================================================//\n//===================================================================================//\n\nexport const setCryptoData = () => async dispatch => {\n    const payload = await axios.get(\"http://localhost:3001/api/crypto/ranking\");\n    // const payload = await axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=1&sparkline=false&price_change_percentage=24h\");\n    const getStartUpData = await axios.get(`https://api.coingecko.com/api/v3/coins/bitcoin`)\n        // console.log(getStartUpData)\n    dispatch({\n        type: actionTypes.SET_CRYPTO_DATA,\n        newCryptoDataArr: payload.data,\n        newSelectedCryptoDisplay: { name: 'bitcoin', data: getStartUpData.data },\n    })\n\n}\n\n//===================================================================================//\n//===================================================================================//\n\nexport const addCryptoData = (id) => async dispatch => {\n    const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n\n    dispatch({\n        type: actionTypes.ADD_CRYPTO_DATA,\n        newCryptoData: payload.data\n    })\n}\n\n\n//===================================================================================//\n//===================================================================================//\nexport const showCryptoData = (id) => async dispatch => {\n    const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n\n    dispatch({\n        type: actionTypes.SHOW_CRYPTO_DATA_DISPLAY,\n        newSelectedCryptoDisplay: { name: payload.data.id, data: payload.data },\n\n    })\n}\n\nexport const getHistoricalPriceData = (id) => async dispatch => {\n    const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=1`)\n\n    dispatch({\n        type\n    })\n\n}"]},"metadata":{},"sourceType":"module"}