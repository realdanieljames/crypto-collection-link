{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\"; //===================================================================================//\n//===================================================================================//\n\nconst initialState = {\n  cryptoData: [],\n  selectedCryptoDisplay: {\n    id: '',\n    name: '',\n    data: {},\n    priceHistory: {}\n  }\n}; //===================================================================================//\n//===================================================================================//\n\nconst cryptoDataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // case actionTypes.ADD_CRYPTO_DATA:\n    //     return {\n    //         cryptoData: [...state.cryptoData, action.newCryptoData]\n    //     }\n    case actionTypes.SET_CRYPTO_DATA:\n      console.log(action);\n      return {\n        cryptoData: action.newCryptoDataArr,\n        // cryptoData: [...state.cryptoData, action.newCryptoDataArr],\n        selectedCryptoDisplay: {\n          id: action.newSelectedCryptoDisplay.id === '' ? 'bitcoin' : action.newselectedCryptoDisplay.id,\n          name: action.newSelectedCryptoDisplay.name,\n          // name: state.selectedCryptoDisplay.name === '' ? 'bitcoin' : state.selectedCryptoDisplay.name,\n          data: action.newSelectedCryptoDisplay.data,\n          priceHistory: action.newSelectedCryptoDisplay.priceHistory\n        }\n      };\n\n    case actionTypes.SHOW_CRYPTO_DATA_DISPLAY:\n      console.log(action); // state.cryptoData.map((value) => console.log(value))\n\n      return {\n        cryptoData: [...state.cryptoData],\n        // cryptoData: [...state.cryptoData],\n        selectedCryptoDisplay: {\n          id: action.newSelectedCryptoDisplay.id,\n          name: action.newSelectedCryptoDisplay.name,\n          data: action.newSelectedCryptoDisplay.data,\n          priceHistory: action.newSelectedCryptoDisplay.priceHistory\n        }\n      };\n\n    case actionTypes.GET_CRYPTO_PRICE_HISTORY:\n      console.log(state);\n      console.log(action);\n      return {\n        cryptoData: [...state.cryptoData],\n        // selectedCryptoDisplay: {...state.selectedCryptoDisplay, priceHistory: action.newSelectedCryptoDisplay.priceHistory }\n        selectedCryptoDisplay: {\n          id: state.selectedCryptoDisplay.id,\n          name: action.newSelectedCryptoDisplay.name,\n          data: action.newSelectedCryptoDisplay.data,\n          priceHistory: action.newSelectedCryptoDisplay.priceHistory\n        }\n      };\n\n    default:\n      return state;\n  }\n}; //===================================================================================//\n//===================================================================================//\n\n\nexport default cryptoDataReducer;","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/store/reducers/cryptoDataReducer.js"],"names":["actionTypes","initialState","cryptoData","selectedCryptoDisplay","id","name","data","priceHistory","cryptoDataReducer","state","action","type","SET_CRYPTO_DATA","console","log","newCryptoDataArr","newSelectedCryptoDisplay","newselectedCryptoDisplay","SHOW_CRYPTO_DATA_DISPLAY","GET_CRYPTO_PRICE_HISTORY"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B,C,CAEA;AACA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,qBAAqB,EAAE;AACnBC,IAAAA,EAAE,EAAE,EADe;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,IAAI,EAAE,EAHa;AAInBC,IAAAA,YAAY,EAAE;AAJK;AAFN,CAArB,C,CAaA;AACA;;AACA,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAExD,UAAQA,MAAM,CAACC,IAAf;AACI;AACA;AACA;AACA;AAEA,SAAKX,WAAW,CAACY,eAAjB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,aAAO;AACHR,QAAAA,UAAU,EAAEQ,MAAM,CAACK,gBADhB;AAEH;AACAZ,QAAAA,qBAAqB,EAAE;AAEnBC,UAAAA,EAAE,EAAEM,MAAM,CAACM,wBAAP,CAAgCZ,EAAhC,KAAuC,EAAvC,GAA4C,SAA5C,GAAwDM,MAAM,CAACO,wBAAP,CAAgCb,EAFzE;AAGnBC,UAAAA,IAAI,EAAEK,MAAM,CAACM,wBAAP,CAAgCX,IAHnB;AAInB;AACAC,UAAAA,IAAI,EAAEI,MAAM,CAACM,wBAAP,CAAgCV,IALnB;AAMnBC,UAAAA,YAAY,EAAEG,MAAM,CAACM,wBAAP,CAAgCT;AAN3B;AAHpB,OAAP;;AAYJ,SAAKP,WAAW,CAACkB,wBAAjB;AACIL,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EADJ,CAEQ;;AAGJ,aAAO;AACHR,QAAAA,UAAU,EAAE,CAAC,GAAGO,KAAK,CAACP,UAAV,CADT;AAEH;AACAC,QAAAA,qBAAqB,EAAE;AACnBC,UAAAA,EAAE,EAAEM,MAAM,CAACM,wBAAP,CAAgCZ,EADjB;AAEnBC,UAAAA,IAAI,EAAEK,MAAM,CAACM,wBAAP,CAAgCX,IAFnB;AAGnBC,UAAAA,IAAI,EAAEI,MAAM,CAACM,wBAAP,CAAgCV,IAHnB;AAInBC,UAAAA,YAAY,EAAEG,MAAM,CAACM,wBAAP,CAAgCT;AAJ3B;AAHpB,OAAP;;AAaJ,SAAKP,WAAW,CAACmB,wBAAjB;AACIN,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,aAAO;AACHR,QAAAA,UAAU,EAAE,CAAC,GAAGO,KAAK,CAACP,UAAV,CADT;AAEH;AACAC,QAAAA,qBAAqB,EAAE;AACnBC,UAAAA,EAAE,EAAEK,KAAK,CAACN,qBAAN,CAA4BC,EADb;AAEnBC,UAAAA,IAAI,EAAEK,MAAM,CAACM,wBAAP,CAAgCX,IAFnB;AAGnBC,UAAAA,IAAI,EAAEI,MAAM,CAACM,wBAAP,CAAgCV,IAHnB;AAInBC,UAAAA,YAAY,EAAEG,MAAM,CAACM,wBAAP,CAAgCT;AAJ3B;AAHpB,OAAP;;AAWJ;AACI,aAAOE,KAAP;AArDR;AAuDH,CAzDD,C,CA4DA;AACA;;;AACA,eAAeD,iBAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\n//===================================================================================//\n//===================================================================================//\nconst initialState = {\n    cryptoData: [],\n    selectedCryptoDisplay: {\n        id: '',\n        name: '',\n        data: {},\n        priceHistory: {}\n    }\n\n}\n\n\n\n//===================================================================================//\n//===================================================================================//\nconst cryptoDataReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        // case actionTypes.ADD_CRYPTO_DATA:\n        //     return {\n        //         cryptoData: [...state.cryptoData, action.newCryptoData]\n        //     }\n\n        case actionTypes.SET_CRYPTO_DATA:\n            console.log(action)\n            return {\n                cryptoData: action.newCryptoDataArr,\n                // cryptoData: [...state.cryptoData, action.newCryptoDataArr],\n                selectedCryptoDisplay: {\n\n                    id: action.newSelectedCryptoDisplay.id === '' ? 'bitcoin' : action.newselectedCryptoDisplay.id,\n                    name: action.newSelectedCryptoDisplay.name,\n                    // name: state.selectedCryptoDisplay.name === '' ? 'bitcoin' : state.selectedCryptoDisplay.name,\n                    data: action.newSelectedCryptoDisplay.data,\n                    priceHistory: action.newSelectedCryptoDisplay.priceHistory\n                }\n            }\n        case actionTypes.SHOW_CRYPTO_DATA_DISPLAY:\n            console.log(action)\n                // state.cryptoData.map((value) => console.log(value))\n\n\n            return {\n                cryptoData: [...state.cryptoData],\n                // cryptoData: [...state.cryptoData],\n                selectedCryptoDisplay: {\n                    id: action.newSelectedCryptoDisplay.id,\n                    name: action.newSelectedCryptoDisplay.name,\n                    data: action.newSelectedCryptoDisplay.data,\n                    priceHistory: action.newSelectedCryptoDisplay.priceHistory\n                }\n\n\n            }\n\n        case actionTypes.GET_CRYPTO_PRICE_HISTORY:\n            console.log(state)\n            console.log(action)\n            return {\n                cryptoData: [...state.cryptoData],\n                // selectedCryptoDisplay: {...state.selectedCryptoDisplay, priceHistory: action.newSelectedCryptoDisplay.priceHistory }\n                selectedCryptoDisplay: {\n                    id: state.selectedCryptoDisplay.id,\n                    name: action.newSelectedCryptoDisplay.name,\n                    data: action.newSelectedCryptoDisplay.data,\n                    priceHistory: action.newSelectedCryptoDisplay.priceHistory\n                }\n\n            }\n        default:\n            return state;\n    }\n}\n\n\n//===================================================================================//\n//===================================================================================//\nexport default cryptoDataReducer;"]},"metadata":{},"sourceType":"module"}