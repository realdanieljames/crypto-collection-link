{"ast":null,"code":"var _jsxFileName = \"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoRankingPage/CryptoRankingPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./CryptoRankingPage.css\";\nimport { connect } from \"react-redux\";\nimport { setCryptoData, addCryptoData } from \"../../store/actions/actionCreators\";\nimport CryptoDataDisplay from \"../CryptoDataDisplay/CryptoDataDisplay\"; //===================================================================================//\n//===================================================================================//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoRankingPage = props => {\n  _s();\n\n  useEffect(() => {\n    props.setCryptoData();\n  }, []);\n\n  const showCryptoDtaDisplay = cryptoID => {\n    console.log(cryto.id);\n  }; //===================================================================================//\n  //===================================================================================//\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crypto__ranking__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin__info\",\n      children: props.cryptoData.map(cryptocurrency => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin__card\",\n        onClick: () => console.log(cryptocurrency.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__rank\",\n          children: [\" \", \"Rank: \", cryptocurrency.market_cap_rank, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 53\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" ( \", cryptocurrency.symbol.toUpperCase(), \" )\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card__image\",\n          src: cryptocurrency.image,\n          alt: cryptocurrency.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__name\",\n          children: cryptocurrency.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__price\",\n          children: [\" \", \"USD: \", \"  \", cryptocurrency.current_price.toLocaleString(\"en-US\"), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, cryptocurrency.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}; //===================================================================================//\n//===================================================================================//\n\n\n_s(CryptoRankingPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CryptoRankingPage;\n\nconst mapStateToProps = state => {\n  return {\n    cryptoData: state.cryptoData\n  };\n}; //===================================================================================//\n//===================================================================================//\n\n\nexport default connect(mapStateToProps, {\n  setCryptoData,\n  addCryptoData\n})(CryptoRankingPage); // export default CryptoRankingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoRankingPage\");","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoRankingPage/CryptoRankingPage.js"],"names":["React","useEffect","connect","setCryptoData","addCryptoData","CryptoDataDisplay","CryptoRankingPage","props","showCryptoDtaDisplay","cryptoID","console","log","cryto","id","cryptoData","map","cryptocurrency","market_cap_rank","symbol","toUpperCase","image","name","current_price","toLocaleString","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,yBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACAC,aADA,EAEAC,aAFA,QAGO,oCAHP;AAIA,OAAOC,iBAAP,MAA8B,wCAA9B,C,CAEA;AACA;;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACrCN,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACJ,aAAN;AACH,GAFQ,EAEP,EAFO,CAAT;;AAMA,QAAMK,oBAAoB,GAAGC,QAAD,IAAY;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,EAAlB;AACH,GAFD,CAPqC,CAUrC;AACA;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAEKN,KAAK,CAACO,UAAN,CAAiBC,GAAjB,CAAsBC,cAAD,iBACtB;AAA6B,QAAA,SAAS,EAAC,YAAvC;AAAoD,QAAA,OAAO,EAAG,MAAKN,OAAO,CAACC,GAAR,CAAYK,cAAc,CAACH,EAA3B,CAAnE;AAAA,gCAGI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,qBACC,GADD,YAEOG,cAAc,CAACC,eAFtB,oBAEwC;AAAA;AAAA;AAAA;AAAA,kBAFxC,EAEgD,GAFhD,eAGA;AAAA,8BAAYD,cAAc,CAACE,MAAf,CAAsBC,WAAtB,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,EAG4D,GAH5D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAYI;AACA,UAAA,SAAS,EAAC,aADV;AAEA,UAAA,GAAG,EAAEH,cAAc,CAACI,KAFpB;AAGA,UAAA,GAAG,EAAEJ,cAAc,CAACK;AAHpB;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAiBI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6BL,cAAc,CAACK;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAjBJ,eAmBI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,qBACC,GADD,WAEM,IAFN,EAGCL,cAAc,CAACM,aAAf,CAA6BC,cAA7B,CAA4C,OAA5C,CAHD,eAKA;AAAA;AAAA;AAAA;AAAA,kBALA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA,SAAUP,cAAc,CAACH,EAAzB;AAAA;AAAA;AAAA;AAAA,cADC;AAFL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCC,CArDD,C,CAuDA;AACA;;;GAxDMP,iB;;KAAAA,iB;;AAyDN,MAAMkB,eAAe,GAAIC,KAAD,IAAW;AACnC,SAAO;AACHX,IAAAA,UAAU,EAAEW,KAAK,CAACX;AADf,GAAP;AAGC,CAJD,C,CAMA;AACA;;;AAEA,eAAeZ,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CACfE,iBADe,CAAf,C,CAGA","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./CryptoRankingPage.css\";\nimport { connect } from \"react-redux\";\nimport {\nsetCryptoData,\naddCryptoData,\n} from \"../../store/actions/actionCreators\";\nimport CryptoDataDisplay from \"../CryptoDataDisplay/CryptoDataDisplay\";\n\n//===================================================================================//\n//===================================================================================//\n\nconst CryptoRankingPage = (props) => {\nuseEffect(() => {\n    props.setCryptoData();\n},[]);\n\n\n\nconst showCryptoDtaDisplay =(cryptoID)=>{\n    console.log(cryto.id)\n}\n//===================================================================================//\n//===================================================================================//\nreturn (\n    <div className=\"crypto__ranking__container\">\n    <div className=\"coin__info\">\n        {/* <div className=\"search__length\"> showing Top {coinsPerPage} of Page {pageNumber} </div>  */}\n        {props.cryptoData.map((cryptocurrency) => (\n        <div key={cryptocurrency.id} className=\"coin__card\" onClick={ ()=> console.log(cryptocurrency.id)}>\n            {/* <div className=\"favorite__icon\"> {<StarOutlineOutlinedIcon/>}</div> */}\n            {/* {<FavoriteBorderIcon/>} */}\n            <div className=\"card__rank\">\n            {\" \"}\n            Rank: {cryptocurrency.market_cap_rank} {<br />}{\" \"}\n            <strong> ( {cryptocurrency.symbol.toUpperCase()} )</strong>{\" \"}\n            </div>\n            {/* <div className=\"card__marketcap\"> MCap: {cryptocurrency.market_data.market_cap.usd.toLocaleString(\"en-US\",currencyObj)}</div> */}\n            {/* <div className=\"card__circulating__supply\">Circulating Supply:{<br/>} {Number(cryptocurrency.market_data.circulating_supply).toLocaleString(\"en-US\")} <strong> {cryptocurrency.symbol.toUpperCase()}</strong></div> */}\n\n            {/* <div className=\"card__marketcap\">MCap: {cryptocurrency.market_data.market_cap.usd.toLocaleString(\"en-US\",currencyObj)}</div> */}\n            <img\n            className=\"card__image\"\n            src={cryptocurrency.image}\n            alt={cryptocurrency.name}\n            />\n            <div className=\"card__name\">{cryptocurrency.name}</div>\n            {/* <div className=\"current__price\">  Price</div> */}\n            <div className=\"card__price\">\n            {\" \"}\n            USD: {\"  \"}\n            {cryptocurrency.current_price.toLocaleString(\"en-US\")}\n            {/* <div className=\"card__price\"> USD:  {\"  \"}{cryptocurrency.market_data.current_price.usd.toLocaleString(\"en-US\",currencyObj)}  */}\n            <hr />\n            {/* BTC: â‚¿{cryptocurrency.market_data.current_price.btc} */}\n            {/* <hr/>  */}\n            {/* ETH: {cryptocurrency.market_data.current_price.eth} */}\n            {/* <hr/>     */}\n            </div>\n        </div>\n        ))}\n    </div>\n    {/* <CryptoDataDisplay /> */}\n    </div>\n);\n};\n\n//===================================================================================//\n//===================================================================================//\nconst mapStateToProps = (state) => {\nreturn {\n    cryptoData: state.cryptoData,\n};\n};\n\n//===================================================================================//\n//===================================================================================//\n\nexport default connect(mapStateToProps, { setCryptoData, addCryptoData })(\nCryptoRankingPage\n);\n// export default CryptoRankingPage;\n"]},"metadata":{},"sourceType":"module"}