{"ast":null,"code":"var _jsxFileName = \"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoDataDisplay/CryptoDataDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./CryptoDataDisplay.css\";\nimport { connect } from \"react-redux\";\nimport cryptoDataReducer from \"../../store/reducers/cryptoDataReducer\";\nimport { setCryptoData, addCryptoData, showCryptoData } from \"../../store/actions/actionCreators\"; //===================================================================================//\n//===================================================================================//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoDataDisplay = props => {\n  _s();\n\n  useEffect(() => {\n    props.showCryptoData(props.selectedCryptoDisplay);\n  }, []); // console.log(props)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crypto__data__display\",\n    children: props.selected.map(cryptocurrency => {\n      console.log(cryptocurrency); // let chosenCrytpo = props.addCryptoData(cryptocurrency.id)\n      // console.log(chosenCrytpo)\n      // console.log(cryptocurrency);\n\n      if (cryptocurrency.id === props.selectedCryptoDisplay.name) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crypto__data__display__elements\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crypto__data__display__name__logo\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"crypto__data__display__image\",\n              src: cryptocurrency.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"crypto__data__display__name\",\n              children: cryptocurrency.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: cryptocurrency.market_cap_rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}; //===================================================================================//\n//===================================================================================//\n\n\n_s(CryptoDataDisplay, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CryptoDataDisplay;\n\nconst mapStateToProps = state => {\n  return {\n    cryptoData: state.cryptoData,\n    selectedCryptoDisplay: state.selectedCryptoDisplay\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCryptoData,\n  addCryptoData,\n  showCryptoData\n})(CryptoDataDisplay); // export default CryptoDataDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDataDisplay\");","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoDataDisplay/CryptoDataDisplay.js"],"names":["React","useEffect","connect","cryptoDataReducer","setCryptoData","addCryptoData","showCryptoData","CryptoDataDisplay","props","selectedCryptoDisplay","selected","map","cryptocurrency","console","log","id","name","image","market_cap_rank","mapStateToProps","state","cryptoData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,yBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,QAIO,oCAJP,C,CAKA;AACA;;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAGrCP,EAAAA,SAAS,CAAC,MAAI;AACZO,IAAAA,KAAK,CAACF,cAAN,CAAqBE,KAAK,CAACC,qBAA3B;AACD,GAFQ,EAEP,EAFO,CAAT,CAHqC,CAOjC;;AAGF,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,cACGD,KAAK,CAACE,QAAN,CAAeC,GAAf,CAAoBC,cAAD,IAAoB;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ,EADsC,CAEpC;AACA;AACF;;AACA,UAAIA,cAAc,CAACG,EAAf,KAAsBP,KAAK,CAACC,qBAAN,CAA4BO,IAAtD,EAA4D;AAE1D,4BACE;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,mCAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,8BADZ;AAEE,cAAA,GAAG,EAAEJ,cAAc,CAACK;AAFtB;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE;AAAI,cAAA,SAAS,EAAC,6BAAd;AAAA,wBACGL,cAAc,CAACI;AADlB;AAAA;AAAA;AAAA;AAAA,oBALF,eAQE;AAAA,wBAAIJ,cAAc,CAACM;AAAnB;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAeD;AACF,KAvBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAtCD,C,CAwCA;AACA;;;GAzCMX,iB;;KAAAA,iB;;AA0CN,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,UAAU,EAAED,KAAK,CAACC,UADb;AAELZ,IAAAA,qBAAqB,EAAEW,KAAK,CAACX;AAFxB,GAAP;AAID,CALD;;AAOA,eAAeP,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA,aAAF;AAAiBC,EAAAA,aAAjB;AAA+BC,EAAAA;AAA/B,CAAlB,CAAP,CACbC,iBADa,CAAf,C,CAGA","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./CryptoDataDisplay.css\";\nimport { connect } from \"react-redux\";\nimport cryptoDataReducer from \"../../store/reducers/cryptoDataReducer\";\nimport {\n  setCryptoData,\n  addCryptoData,\n  showCryptoData,\n} from \"../../store/actions/actionCreators\";\n//===================================================================================//\n//===================================================================================//\n\nconst CryptoDataDisplay = (props) => {\n\n\nuseEffect(()=>{\n  props.showCryptoData(props.selectedCryptoDisplay)\n},[])\n\n    // console.log(props)\n\n\n  return (\n    <div className=\"crypto__data__display\">\n      {props.selected.map((cryptocurrency) => {\n        console.log(cryptocurrency)\n          // let chosenCrytpo = props.addCryptoData(cryptocurrency.id)\n          // console.log(chosenCrytpo)\n        // console.log(cryptocurrency);\n        if (cryptocurrency.id === props.selectedCryptoDisplay.name) {\n\n          return (\n            <div className=\"crypto__data__display__elements\">\n              <div className=\"crypto__data__display__name__logo\">\n                <img\n                  className=\"crypto__data__display__image\"\n                  src={cryptocurrency.image}\n                />\n                <h2 className=\"crypto__data__display__name\">\n                  {cryptocurrency.name}\n                </h2>\n                <p>{cryptocurrency.market_cap_rank}</p>\n              </div>\n\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\n//===================================================================================//\n//===================================================================================//\nconst mapStateToProps = (state) => {\n  return { \n    cryptoData: state.cryptoData,\n    selectedCryptoDisplay: state.selectedCryptoDisplay\n  };\n};\n\nexport default connect(mapStateToProps, { setCryptoData, addCryptoData,showCryptoData })(\n  CryptoDataDisplay\n);\n// export default CryptoDataDisplay;\n"]},"metadata":{},"sourceType":"module"}