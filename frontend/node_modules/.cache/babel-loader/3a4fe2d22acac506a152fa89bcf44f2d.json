{"ast":null,"code":"var _jsxFileName = \"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CurrencyConverter/CurrencyConverter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { connect } from \"react-redux\";\nimport { showCryptoData } from \"../../store/actions/actionCreators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CurrencyConverter = props => {\n  _s();\n\n  const baseCurrencyRef = useRef();\n  const quoteCurrencyRef = useRef();\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crypto__data__display__currency__converter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Cryptocurrency Converter Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: parseInt(1),\n      placeholder: \"0\",\n      ref: baseCurrencyRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: [props.selectedCryptoData.symbol.toUpperCase(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), props.cryptoData.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: value.name,\n          children: [value.name, \" (\", value.symbol.toUpperCase(), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: 0,\n      placeholder: props.selectedCryptoData.market_data.current_price.usd,\n      ref: quoteCurrencyRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"USD \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log(parseInt(baseCurrencyRef) * 2);\n      },\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.selectedCryptoData.market_data.current_price.usd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CurrencyConverter, \"ep0qAJnYh8y6PMbYtaQ8cjUjdEs=\");\n\n_c = CurrencyConverter;\nexport default CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CurrencyConverter/CurrencyConverter.js"],"names":["React","useRef","connect","showCryptoData","CurrencyConverter","props","baseCurrencyRef","quoteCurrencyRef","console","log","parseInt","selectedCryptoData","symbol","toUpperCase","cryptoData","map","value","name","market_data","current_price","usd"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,MAAd,QAA2B,OAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,oCAA7B;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAGjC,QAAMC,eAAe,GAAGL,MAAM,EAA9B;AACA,QAAMM,gBAAgB,GAAGN,MAAM,EAA/B;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAWF;AAAO,MAAA,YAAY,EAAEK,QAAQ,CAAC,CAAD,CAA7B;AAAkC,MAAA,WAAW,EAAC,GAA9C;AAAkD,MAAA,GAAG,EAAEJ;AAAvD;AAAA;AAAA;AAAA;AAAA,YAXE,eAYF;AAAA,8BAEI;AAAA,mBAASD,KAAK,CAACM,kBAAN,CAAyBC,MAAzB,CAAgCC,WAAhC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKR,KAAK,CAACS,UAAN,CAAiBC,GAAjB,CAAsBC,KAAD,IAAS;AAC7B,4BACE;AAAQ,UAAA,KAAK,EAAEA,KAAK,CAACC,IAArB;AAAA,qBAA4BD,KAAK,CAACC,IAAlC,QAA2CD,KAAK,CAACJ,MAAN,CAAaC,WAAb,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJA,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YAZE,eAuBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBE,eAwBF;AAAO,MAAA,YAAY,EAAE,CAArB;AAAwB,MAAA,WAAW,EAAER,KAAK,CAACM,kBAAN,CAAyBO,WAAzB,CAAqCC,aAArC,CAAmDC,GAAxF;AAA6F,MAAA,GAAG,EAAEb;AAAlG;AAAA;AAAA;AAAA;AAAA,YAxBE,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF,eAsCJ;AAAQ,MAAA,OAAO,EAAE,MAAI;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACJ,eAAD,CAAR,GAA4B,CAAxC;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCI,eA0CR;AAAA,gBAAMD,KAAK,CAACM,kBAAN,CAAyBO,WAAzB,CAAqCC,aAArC,CAAmDC;AAAzD;AAAA;AAAA;AAAA;AAAA,YA1CQ,eA2CJ;AAAA,6BAEE;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YA3CI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH,CA3DD;;GAAMhB,iB;;KAAAA,iB;AA6DN,eAAeA,iBAAf","sourcesContent":["import React,{useRef} from 'react'\nimport {connect} from \"react-redux\";\nimport {showCryptoData} from \"../../store/actions/actionCreators\"\n\nconst CurrencyConverter = (props) => {\n\n\n    const baseCurrencyRef = useRef()\n    const quoteCurrencyRef = useRef()\n\n    console.log(props)\n    return (\n        <div className=\"crypto__data__display__currency__converter\" >\n        <h3>Cryptocurrency Converter Calculator</h3>\n        {/* <img src={selectedCryptoData.image.thumb}/>\n        <span>{selectedCryptoData.name}</span>\n        <br/>\n        \n        \n        <img src={selectedCryptoData.image.thumb}/>\n        <span>United states Dollar</span>\n      <input defaultValue={selectedCryptoData.market_data.current_price.usd} placeholder=\"0\" ref={quoteCurrencyRef}/> */}\n\n      <input defaultValue={parseInt(1)} placeholder=\"0\" ref={baseCurrencyRef}/>\n      <select>\n\n          <option>{props.selectedCryptoData.symbol.toUpperCase()} </option>\n          <input placeholder=\"search\"/>\n          {props.cryptoData.map((value)=>{\n            return (\n              <option value={value.name}>{value.name } ({value.symbol.toUpperCase()})</option>\n            )\n          })}\n          \n      </select>\n      <div>=</div>\n      <input defaultValue={0} placeholder={props.selectedCryptoData.market_data.current_price.usd} ref={quoteCurrencyRef}/>\n      {/* <select> */}\n\n          <div>USD </div>\n\n          {/* {props.cryptoData.map((value)=>{\n            return (\n              <option value={value.name}>USD</option>\n            )\n          })} */}\n          \n      {/* </select> */}\n    \n\n    <button onClick={()=>{\n      console.log(parseInt(baseCurrencyRef) * 2)\n    }}>Convert</button>\n\n<div>{props.selectedCryptoData.market_data.current_price.usd }</div>\n    <div>\n\n      <span>{}</span>\n      {/* {quoteCurrencyRef.current_price.value} */}\n      {/* {baseCurrencyRef.current.value} */}\n    </div>\n      </div>  \n    )\n}\n\nexport default CurrencyConverter\n"]},"metadata":{},"sourceType":"module"}