{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const setCryptoData = () => async dispatch => {\n  const payload = await axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=1&sparkline=false&price_change_percentage=24h\");\n  dispatch({\n    type: actionTypes.SET_CRYPTO_DATA,\n    newCryptoDataArr: payload.data\n  });\n};\nexport const addCryptoData = id => async dispatch => {\n  const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/}`);\n  console.log(payload);\n  dispatch({\n    type: actionTypes.ADD_CRYPTO_DATA,\n    newCryptoData: payload.data\n  });\n};","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/store/actions/actionCreators.js"],"names":["axios","actionTypes","setCryptoData","dispatch","payload","get","type","SET_CRYPTO_DATA","newCryptoDataArr","data","addCryptoData","id","console","log","ADD_CRYPTO_DATA","newCryptoData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACjD,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,qJAAV,CAAtB;AACAF,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEL,WAAW,CAACM,eADb;AAELC,IAAAA,gBAAgB,EAAEJ,OAAO,CAACK;AAFrB,GAAD,CAAR;AAKH,CAPM;AAUP,OAAO,MAAMC,aAAa,GAAIC,EAAD,IAAQ,MAAMR,QAAN,IAAkB;AACnD,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,0CAAX,CAAtB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACAD,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEL,WAAW,CAACa,eADb;AAELC,IAAAA,aAAa,EAAEX,OAAO,CAACK;AAFlB,GAAD,CAAR;AAIH,CAPM","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const setCryptoData = () => async dispatch => {\n    const payload = await axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=1&sparkline=false&price_change_percentage=24h\");\n    dispatch({\n        type: actionTypes.SET_CRYPTO_DATA,\n        newCryptoDataArr: payload.data\n    })\n\n}\n\n\nexport const addCryptoData = (id) => async dispatch => {\n    const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/}`);\n    console.log(payload)\n    dispatch({\n        type: actionTypes.ADD_CRYPTO_DATA,\n        newCryptoData: payload.data\n    })\n}"]},"metadata":{},"sourceType":"module"}