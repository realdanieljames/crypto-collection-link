{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n  cryptoData: [],\n  selectedCryptoDisplay: ''\n};\n\nconst cryptoDataReducer = (state = initialState, action) => {\n  console.log(action);\n  console.log(state);\n\n  switch (action.type) {\n    case actionTypes.ADD_CRYPTO_DATA:\n      return {\n        cryptoData: [...state.cryptoData, action.newCryptoData]\n      };\n\n    case actionTypes.SET_CRYPTO_DATA:\n      return {\n        cryptoData: action.newCryptoDataArr\n      };\n\n    case actionTypes.SHOW_CRYPTO_DATA_DISPLAY:\n      state.c;\n      return {\n        selectedCryptoDisplay: action.selectedCryptoDisplay\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cryptoDataReducer;","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/store/reducers/cryptoDataReducer.js"],"names":["actionTypes","initialState","cryptoData","selectedCryptoDisplay","cryptoDataReducer","state","action","console","log","type","ADD_CRYPTO_DATA","newCryptoData","SET_CRYPTO_DATA","newCryptoDataArr","SHOW_CRYPTO_DATA_DISPLAY","c"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,qBAAqB,EAAE;AAFN,CAArB;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAQC,MAAM,CAACG,IAAf;AACI,SAAKT,WAAW,CAACU,eAAjB;AACI,aAAO;AACHR,QAAAA,UAAU,EAAE,CAAC,GAAGG,KAAK,CAACH,UAAV,EAAsBI,MAAM,CAACK,aAA7B;AADT,OAAP;;AAIJ,SAAKX,WAAW,CAACY,eAAjB;AACI,aAAO;AACHV,QAAAA,UAAU,EAAEI,MAAM,CAACO;AADhB,OAAP;;AAGJ,SAAKb,WAAW,CAACc,wBAAjB;AACIT,MAAAA,KAAK,CAACU,CAAN;AACA,aAAO;AACHZ,QAAAA,qBAAqB,EAAEG,MAAM,CAACH;AAD3B,OAAP;;AAGJ;AACI,aAAOE,KAAP;AAhBR;AAkBH,CArBD;;AAuBA,eAAeD,iBAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nconst initialState = {\n    cryptoData: [],\n    selectedCryptoDisplay: ''\n}\n\nconst cryptoDataReducer = (state = initialState, action) => {\n    console.log(action)\n    console.log(state)\n    switch (action.type) {\n        case actionTypes.ADD_CRYPTO_DATA:\n            return {\n                cryptoData: [...state.cryptoData, action.newCryptoData]\n            }\n\n        case actionTypes.SET_CRYPTO_DATA:\n            return {\n                cryptoData: action.newCryptoDataArr\n            }\n        case actionTypes.SHOW_CRYPTO_DATA_DISPLAY:\n            state.c\n            return {\n                selectedCryptoDisplay: action.selectedCryptoDisplay\n            }\n        default:\n            return state;\n    }\n}\n\nexport default cryptoDataReducer;"]},"metadata":{},"sourceType":"module"}