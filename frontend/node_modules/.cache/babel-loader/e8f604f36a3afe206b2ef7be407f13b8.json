{"ast":null,"code":"var _jsxFileName = \"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoRankingPage/CryptoRankingPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCryptoData, addCryptoData } from \"../../store/actions/actionCreators\"; //===================================================================================//\n//===================================================================================//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoRankingPage = props => {\n  _s();\n\n  useEffect(() => {\n    props.setCryptoData();\n  }); //===================================================================================//\n  //===================================================================================//\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    // <h1>Hello World</h1>\n    // {props.cryptoData.map((value) => {\n    //     return <p>{value.id}</p>;\n    // })}\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"coin__info\",\n      children: props.cryptoData.map(coinInfo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__rank\",\n          children: [\" Rank: \", coinInfo.market_data.market_cap_rank, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 88\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" ( \", coinInfo.symbol.toUpperCase(), \" )\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 95\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card__image\",\n          src: coinInfo.image.large,\n          alt: coinInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__name\",\n          children: coinInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card__price\",\n          children: [\" USD:  \", \"  \", coinInfo.market_data.current_price.usd.toLocaleString(\"en-US\"), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, coinInfo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 1\n    }, this)\n  );\n}; //===================================================================================//\n//===================================================================================//\n\n\n_s(CryptoRankingPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CryptoRankingPage;\n\nconst mapStateToProps = state => {\n  return {\n    cryptoData: state.cryptoData\n  };\n}; //===================================================================================//\n//===================================================================================//\n\n\nexport default connect(mapStateToProps, {\n  setCryptoData,\n  addCryptoData\n})(CryptoRankingPage); // export default CryptoRankingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoRankingPage\");","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoRankingPage/CryptoRankingPage.js"],"names":["React","useEffect","connect","setCryptoData","addCryptoData","CryptoRankingPage","props","cryptoData","map","coinInfo","market_data","market_cap_rank","symbol","toUpperCase","image","large","name","current_price","usd","toLocaleString","id","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACAC,aADA,EAEAC,aAFA,QAGO,oCAHP,C,CAKA;AACA;;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACrCL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAACH,aAAN;AACH,GAFQ,CAAT,CADqC,CAMrC;AACA;;AACA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AAGJ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAISG,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAsBC,QAAD,iBACtB;AAEA,QAAA,SAAS,EAAC,YAFV;AAAA,gCAMI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,gCAAoCA,QAAQ,CAACC,WAAT,CAAqBC,eAAzD,oBAA2E;AAAA;AAAA;AAAA;AAAA,kBAA3E,oBAAkF;AAAA,8BAAYF,QAAQ,CAACG,MAAT,CAAgBC,WAAhB,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAWI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,GAAG,EAAEJ,QAAQ,CAACK,KAAT,CAAeC,KAAjD;AAAwD,UAAA,GAAG,EAAEN,QAAQ,CAACO;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6BP,QAAQ,CAACO;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAcQ;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,gCAAqC,IAArC,EAA2CP,QAAQ,CAACC,WAAT,CAAqBO,aAArB,CAAmCC,GAAnC,CAAuCC,cAAvC,CAAsD,OAAtD,CAA3C,eAEA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdR;AAAA,SACKV,QAAQ,CAACW,EADd;AAAA;AAAA;AAAA;AAAA,cADC;AAJT;AAAA;AAAA;AAAA;AAAA;AATA;AAgDC,CAxDD,C,CA0DA;AACA;;;GA3DMf,iB;;KAAAA,iB;;AA4DN,MAAMgB,eAAe,GAAIC,KAAD,IAAW;AACnC,SAAO;AACHf,IAAAA,UAAU,EAAEe,KAAK,CAACf;AADf,GAAP;AAGC,CAJD,C,CAMA;AACA;;;AAEA,eAAeL,OAAO,CAACmB,eAAD,EAAkB;AAAElB,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CACfC,iBADe,CAAf,C,CAGA","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\nsetCryptoData,\naddCryptoData,\n} from \"../../store/actions/actionCreators\";\n\n//===================================================================================//\n//===================================================================================//\n\nconst CryptoRankingPage = (props) => {\nuseEffect(() => {\n    props.setCryptoData();\n});\n\n\n//===================================================================================//\n//===================================================================================//\nreturn (\n    // <div>\n    // <h1>Hello World</h1>\n    // {props.cryptoData.map((value) => {\n    //     return <p>{value.id}</p>;\n    // })}\n    // </div>\n\n\n<div className=\"coin__info\">\n{/* <div>  \n<div> */}\n{/* <div className=\"search__length\"> showing Top {coinsPerPage} of Page {pageNumber} </div>  */}\n        {props.cryptoData.map((coinInfo) => (\n        <div \n        key={coinInfo.id} \n        className=\"coin__card\"        \n        >\n            {/* <div className=\"favorite__icon\"> {<StarOutlineOutlinedIcon/>}</div> */}\n            {/* {<FavoriteBorderIcon/>} */}\n            <div className=\"card__rank\"> Rank: {coinInfo.market_data.market_cap_rank} {<br/>} <strong> ( {coinInfo.symbol.toUpperCase()} )</strong> </div>\n            {/* <div className=\"card__marketcap\"> MCap: {coinInfo.market_data.market_cap.usd.toLocaleString(\"en-US\",currencyObj)}</div> */}\n            {/* <div className=\"card__circulating__supply\">Circulating Supply:{<br/>} {Number(coinInfo.market_data.circulating_supply).toLocaleString(\"en-US\")} <strong> {coinInfo.symbol.toUpperCase()}</strong></div> */}\n            \n            {/* <div className=\"card__marketcap\">MCap: {coinInfo.market_data.market_cap.usd.toLocaleString(\"en-US\",currencyObj)}</div> */}\n            <img className=\"card__image\" src={coinInfo.image.large} alt={coinInfo.name}/>\n            <div className=\"card__name\">{coinInfo.name}</div>\n            {/* <div className=\"current__price\">  Price</div> */}\n                <div className=\"card__price\"> USD:  {\"  \"}{coinInfo.market_data.current_price.usd.toLocaleString(\"en-US\")} \n                {/* <div className=\"card__price\"> USD:  {\"  \"}{coinInfo.market_data.current_price.usd.toLocaleString(\"en-US\",currencyObj)}  */}\n                <hr/> \n                {/* BTC: â‚¿{coinInfo.market_data.current_price.btc} */}\n                {/* <hr/>  */}\n                {/* ETH: {coinInfo.market_data.current_price.eth} */}\n                {/* <hr/>     */}\n                </div>      \n        \n        \n        </div>\n        \n\n        \n        ))}\n    </div>\n        :\n        \n        null\n);\n};\n\n//===================================================================================//\n//===================================================================================//\nconst mapStateToProps = (state) => {\nreturn {\n    cryptoData: state.cryptoData,\n};\n};\n\n//===================================================================================//\n//===================================================================================//\n\nexport default connect(mapStateToProps, { setCryptoData, addCryptoData })(\nCryptoRankingPage\n);\n// export default CryptoRankingPage;\n"]},"metadata":{},"sourceType":"module"}