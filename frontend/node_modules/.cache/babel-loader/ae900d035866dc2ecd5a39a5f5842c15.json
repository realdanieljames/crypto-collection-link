{"ast":null,"code":"var _jsxFileName = \"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoDataDisplay/CryptoDataDisplay.js\";\nimport React, { useEffect } from \"react\";\nimport \"./CryptoDataDisplay.css\";\nimport { connect } from \"react-redux\";\nimport cryptoDataReducer from \"../../store/reducers/cryptoDataReducer\";\nimport { setCryptoData, addCryptoData } from \"../../store/actions/actionCreators\"; //===================================================================================//\n//===================================================================================//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoDataDisplay = props => {\n  console.log(props); // useEffect(() => {\n  //   props.addCryptoData('bitcoin')\n  //   console.log(props)\n  // },[]);\n\n  const showCryptoData = id => {\n    const getCryptoId = props.cryptoData.map(crypto => {\n      // return crypto.id\n      console.log(crypto.id);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crypto__data__display\",\n    children: props.cryptoData.map(cryptocurrency => {\n      // let chosenCrytpo = props.addCryptoData(cryptocurrency.id)\n      // console.log(chosenCrytpo)\n      // console.log(cryptocurrency);\n      if (cryptocurrency.id === props.selected) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crypto__data__display__elements\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"crypto__data__display__name__logo\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"crypto__data__display__image\",\n              src: cryptocurrency.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"crypto__data__display__name\",\n              children: cryptocurrency.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: cryptocurrency.market_cap_rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              showCryptoData(cryptocurrency.id);\n            },\n            children: \"crypto change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}; //===================================================================================//\n//===================================================================================//\n\n\n_c = CryptoDataDisplay;\n\nconst mapStateToProps = state => {\n  return {\n    cryptoData: state.cryptoData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCryptoData,\n  addCryptoData\n})(CryptoDataDisplay); // export default CryptoDataDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoDataDisplay\");","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoDataDisplay/CryptoDataDisplay.js"],"names":["React","useEffect","connect","cryptoDataReducer","setCryptoData","addCryptoData","CryptoDataDisplay","props","console","log","showCryptoData","id","getCryptoId","cryptoData","map","crypto","cryptocurrency","selected","image","name","market_cap_rank","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,yBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,SACEC,aADF,EAEEC,aAFF,QAGO,oCAHP,C,CAIA;AACA;;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADqC,CAGnC;AACA;AACA;AACA;;AACF,QAAMG,cAAc,GAAIC,EAAD,IAAM;AAC3B,UAAMC,WAAW,GAAGL,KAAK,CAACM,UAAN,CAAiBC,GAAjB,CAAsBC,MAAD,IAAU;AACjD;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACJ,EAAnB;AACD,KAHmB,CAApB;AAID,GALD;;AAME,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,cACGJ,KAAK,CAACM,UAAN,CAAiBC,GAAjB,CAAsBE,cAAD,IAAoB;AACtC;AACA;AACF;AACA,UAAIA,cAAc,CAACL,EAAf,KAAsBJ,KAAK,CAACU,QAAhC,EAA0C;AACxC,4BACE;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,mCAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,8BADZ;AAEE,cAAA,GAAG,EAAED,cAAc,CAACE;AAFtB;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE;AAAI,cAAA,SAAS,EAAC,6BAAd;AAAA,wBACGF,cAAc,CAACG;AADlB;AAAA;AAAA;AAAA;AAAA,oBALF,eAQE;AAAA,wBAAIH,cAAc,CAACI;AAAnB;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAQ,YAAA,OAAO,EAAE,MAAK;AAACV,cAAAA,cAAc,CAACM,cAAc,CAACL,EAAhB,CAAd;AAAkC,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAeD;AACF,KArBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAvCD,C,CAyCA;AACA;;;KA1CML,iB;;AA2CN,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAET,IAAAA,UAAU,EAAES,KAAK,CAACT;AAApB,GAAP;AACD,CAFD;;AAIA,eAAeX,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CACbC,iBADa,CAAf,C,CAGA","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./CryptoDataDisplay.css\";\nimport { connect } from \"react-redux\";\nimport cryptoDataReducer from \"../../store/reducers/cryptoDataReducer\";\nimport {\n  setCryptoData,\n  addCryptoData,\n} from \"../../store/actions/actionCreators\";\n//===================================================================================//\n//===================================================================================//\n\nconst CryptoDataDisplay = (props) => {\nconsole.log(props)\n\n  // useEffect(() => {\n  //   props.addCryptoData('bitcoin')\n  //   console.log(props)\n  // },[]);\nconst showCryptoData = (id)=>{\n  const getCryptoId = props.cryptoData.map((crypto)=>{\n    // return crypto.id\n    console.log(crypto.id)\n  })\n}\n  return (\n    <div className=\"crypto__data__display\">\n      {props.cryptoData.map((cryptocurrency) => {\n          // let chosenCrytpo = props.addCryptoData(cryptocurrency.id)\n          // console.log(chosenCrytpo)\n        // console.log(cryptocurrency);\n        if (cryptocurrency.id === props.selected) {\n          return (\n            <div className=\"crypto__data__display__elements\">\n              <div className=\"crypto__data__display__name__logo\">\n                <img\n                  className=\"crypto__data__display__image\"\n                  src={cryptocurrency.image}\n                />\n                <h2 className=\"crypto__data__display__name\">\n                  {cryptocurrency.name}\n                </h2>\n                <p>{cryptocurrency.market_cap_rank}</p>\n              </div>\n              <button onClick={()=> {showCryptoData(cryptocurrency.id)}}>crypto change</button>\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\n//===================================================================================//\n//===================================================================================//\nconst mapStateToProps = (state) => {\n  return { cryptoData: state.cryptoData };\n};\n\nexport default connect(mapStateToProps, { setCryptoData, addCryptoData })(\n  CryptoDataDisplay\n);\n// export default CryptoDataDisplay;\n"]},"metadata":{},"sourceType":"module"}