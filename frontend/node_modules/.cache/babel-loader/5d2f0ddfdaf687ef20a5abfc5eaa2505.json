{"ast":null,"code":"var _jsxFileName = \"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoRankingPage/CryptoRankingPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"./CryptoRankingPage.css\";\nimport { connect } from \"react-redux\";\nimport { setCryptoData, addCryptoData } from \"../../store/actions/actionCreators\"; //===================================================================================//\n//===================================================================================//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoRankingPage = props => {\n  _s();\n\n  useEffect(() => {\n    props.setCryptoData();\n  }); //===================================================================================//\n  //===================================================================================//\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coin__info\",\n    children: props.cryptoData.map(cryptocurrency => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin__card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__rank\",\n        children: [\" Rank: \", cryptocurrency.market_cap_rank, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 82\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\" ( \", cryptocurrency.symbol.toUpperCase(), \" )\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 89\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card__image\",\n        src: cryptocurrency.image,\n        alt: cryptocurrency.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__name\",\n        children: cryptocurrency.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card__price\",\n        children: [\" USD:  \", \"  \", cryptocurrency.current_price.toLocaleString(\"en-US\"), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, cryptocurrency.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 1\n  }, this);\n}; //===================================================================================//\n//===================================================================================//\n\n\n_s(CryptoRankingPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CryptoRankingPage;\n\nconst mapStateToProps = state => {\n  return {\n    cryptoData: state.cryptoData\n  };\n}; //===================================================================================//\n//===================================================================================//\n\n\nexport default connect(mapStateToProps, {\n  setCryptoData,\n  addCryptoData\n})(CryptoRankingPage); // export default CryptoRankingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoRankingPage\");","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoRankingPage/CryptoRankingPage.js"],"names":["React","useEffect","connect","setCryptoData","addCryptoData","CryptoRankingPage","props","cryptoData","map","cryptocurrency","market_cap_rank","symbol","toUpperCase","image","name","current_price","toLocaleString","id","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,yBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACAC,aADA,EAEAC,aAFA,QAGO,oCAHP,C,CAKA;AACA;;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AACrCL,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAACH,aAAN;AACH,GAFQ,CAAT,CADqC,CAMrC;AACA;;AACA,sBAGA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cAESG,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAsBC,cAAD,iBAElB;AAEA,MAAA,SAAS,EAAC,YAFV;AAAA,8BAMA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,8BAAoCA,cAAc,CAACC,eAAnD,oBAAqE;AAAA;AAAA;AAAA;AAAA,gBAArE,oBAA4E;AAAA,4BAAYD,cAAc,CAACE,MAAf,CAAsBC,WAAtB,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,eAWA;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAEH,cAAc,CAACI,KAAjD;AAAwD,QAAA,GAAG,EAAEJ,cAAc,CAACK;AAA5E;AAAA;AAAA;AAAA;AAAA,cAXA,eAYA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA6BL,cAAc,CAACK;AAA5C;AAAA;AAAA;AAAA;AAAA,cAZA,eAcI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,8BAAqC,IAArC,EAA2CL,cAAc,CAACM,aAAf,CAA6BC,cAA7B,CAA4C,OAA5C,CAA3C,eAEA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA,OACKP,cAAc,CAACQ,EADpB;AAAA;AAAA;AAAA;AAAA,YAFH;AAFT;AAAA;AAAA;AAAA;AAAA,UAHA;AAuCC,CA/CD,C,CAiDA;AACA;;;GAlDMZ,iB;;KAAAA,iB;;AAmDN,MAAMa,eAAe,GAAIC,KAAD,IAAW;AACnC,SAAO;AACHZ,IAAAA,UAAU,EAAEY,KAAK,CAACZ;AADf,GAAP;AAGC,CAJD,C,CAMA;AACA;;;AAEA,eAAeL,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CACfC,iBADe,CAAf,C,CAGA","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./CryptoRankingPage.css\"\nimport { connect } from \"react-redux\";\nimport {\nsetCryptoData,\naddCryptoData,\n} from \"../../store/actions/actionCreators\";\n\n//===================================================================================//\n//===================================================================================//\n\nconst CryptoRankingPage = (props) => {\nuseEffect(() => {\n    props.setCryptoData();\n});\n\n\n//===================================================================================//\n//===================================================================================//\nreturn (\n\n\n<div className=\"coin__info\">\n{/* <div className=\"search__length\"> showing Top {coinsPerPage} of Page {pageNumber} </div>  */}\n        {props.cryptoData.map((cryptocurrency) => (\n            \n            <div \n            key={cryptocurrency.id} \n            className=\"coin__card\"        \n            >\n            {/* <div className=\"favorite__icon\"> {<StarOutlineOutlinedIcon/>}</div> */}\n            {/* {<FavoriteBorderIcon/>} */}\n            <div className=\"card__rank\"> Rank: {cryptocurrency.market_cap_rank} {<br/>} <strong> ( {cryptocurrency.symbol.toUpperCase()} )</strong> </div>\n            {/* <div className=\"card__marketcap\"> MCap: {cryptocurrency.market_data.market_cap.usd.toLocaleString(\"en-US\",currencyObj)}</div> */}\n            {/* <div className=\"card__circulating__supply\">Circulating Supply:{<br/>} {Number(cryptocurrency.market_data.circulating_supply).toLocaleString(\"en-US\")} <strong> {cryptocurrency.symbol.toUpperCase()}</strong></div> */}\n            \n            {/* <div className=\"card__marketcap\">MCap: {cryptocurrency.market_data.market_cap.usd.toLocaleString(\"en-US\",currencyObj)}</div> */}\n            <img className=\"card__image\" src={cryptocurrency.image} alt={cryptocurrency.name}/>\n            <div className=\"card__name\">{cryptocurrency.name}</div>\n            {/* <div className=\"current__price\">  Price</div> */}\n                <div className=\"card__price\"> USD:  {\"  \"}{cryptocurrency.current_price.toLocaleString(\"en-US\")} \n                {/* <div className=\"card__price\"> USD:  {\"  \"}{cryptocurrency.market_data.current_price.usd.toLocaleString(\"en-US\",currencyObj)}  */}\n                <hr/> \n                {/* BTC: â‚¿{cryptocurrency.market_data.current_price.btc} */}\n                {/* <hr/>  */}\n                {/* ETH: {cryptocurrency.market_data.current_price.eth} */}\n                {/* <hr/>     */}\n                </div>      \n        \n        \n        </div>\n        \n\n        \n        ))}\n    </div>\n  \n);\n};\n\n//===================================================================================//\n//===================================================================================//\nconst mapStateToProps = (state) => {\nreturn {\n    cryptoData: state.cryptoData,\n};\n};\n\n//===================================================================================//\n//===================================================================================//\n\nexport default connect(mapStateToProps, { setCryptoData, addCryptoData })(\nCryptoRankingPage\n);\n// export default CryptoRankingPage;\n"]},"metadata":{},"sourceType":"module"}