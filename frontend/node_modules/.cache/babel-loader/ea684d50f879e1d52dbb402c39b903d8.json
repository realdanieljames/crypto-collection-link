{"ast":null,"code":"var _jsxFileName = \"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoRankingPage/CryptoRankingPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCryptoData, addCryptoData } from \"../../store/actions/actionCreators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoRankingPage = props => {\n  _s();\n\n  useEffect(() => {\n    props.setCryptoData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Hello World \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), \" \", props.cryptoData.map(value => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", value.id, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this);\n    }), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 14\n  }, this);\n};\n\n_s(CryptoRankingPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CryptoRankingPage;\n\nconst mapStateToProps = state => {\n  return {\n    cryptoData: state.cryptoData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCryptoData,\n  addCryptoData\n})(CryptoRankingPage); // export default CryptoRankingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoRankingPage\");","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/components/CryptoRankingPage/CryptoRankingPage.js"],"names":["React","useEffect","useRef","connect","setCryptoData","addCryptoData","CryptoRankingPage","props","cryptoData","map","value","id","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,oCAA7C;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAEjCN,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACH,aAAN;AACH,GAFQ,CAAT;AAIA,sBAAS;AAAA,4BAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,OAIDG,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAsBC,KAAD,IAAW;AAC5B,0BAAO;AAAA,wBAAOA,KAAK,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAHD,CAJC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAWH,CAjBD;;GAAML,iB;;KAAAA,iB;;AAoBN,MAAMM,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHL,IAAAA,UAAU,EAAEK,KAAK,CAACL;AADf,GAAP;AAGH,CAJD;;AAMA,eAAeL,OAAO,CAACS,eAAD,EAAkB;AAAER,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CAA2DC,iBAA3D,CAAf,C,CACA","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\"\nimport { setCryptoData, addCryptoData } from \"../../store/actions/actionCreators\";\n\nconst CryptoRankingPage = (props) => {\n\n    useEffect(() => {\n        props.setCryptoData();\n    })\n\n    return ( <\n        div >\n        <\n        h1 > Hello World < /h1> {\n            props.cryptoData.map((value) => {\n                return <p > { value.id } < /p>;\n\n            })\n        } <\n        /div>\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        cryptoData: state.cryptoData\n    }\n}\n\nexport default connect(mapStateToProps, { setCryptoData, addCryptoData })(CryptoRankingPage);\n// export default CryptoRankingPage;"]},"metadata":{},"sourceType":"module"}