{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\"; //===================================================================================//\n//===================================================================================//\n\nexport const setCryptoData = () => async dispatch => {\n  const payload = await axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=1&sparkline=false&price_change_percentage=24h\");\n  const getStartUpData = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n  dispatch({\n    type: actionTypes.SET_CRYPTO_DATA,\n    newCryptoDataArr: payload.data,\n    newSelectedCryptoDisplay: {\n      name: 'bitcoin',\n      data: payload.data\n    }\n  });\n}; //===================================================================================//\n//===================================================================================//\n\nexport const addCryptoData = id => async dispatch => {\n  const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n  dispatch({\n    type: actionTypes.ADD_CRYPTO_DATA,\n    newCryptoData: payload.data\n  });\n}; //===================================================================================//\n//===================================================================================//\n\nexport const showCryptoData = id => async dispatch => {\n  const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n  dispatch({\n    type: actionTypes.SHOW_CRYPTO_DATA_DISPLAY,\n    newSelectedCryptoDisplay: {\n      name: payload.data.id,\n      data: payload.data\n    }\n  });\n};","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/src/store/actions/actionCreators.js"],"names":["axios","actionTypes","setCryptoData","dispatch","payload","get","getStartUpData","id","type","SET_CRYPTO_DATA","newCryptoDataArr","data","newSelectedCryptoDisplay","name","addCryptoData","ADD_CRYPTO_DATA","newCryptoData","showCryptoData","SHOW_CRYPTO_DATA_DISPLAY"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAGA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACjD,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,qJAAV,CAAtB;AACA,QAAMC,cAAc,GAAG,MAAMN,KAAK,CAACK,GAAN,CAAW,0CAAyCE,EAAG,EAAvD,CAA7B;AACAJ,EAAAA,QAAQ,CAAC;AACLK,IAAAA,IAAI,EAAEP,WAAW,CAACQ,eADb;AAELC,IAAAA,gBAAgB,EAAEN,OAAO,CAACO,IAFrB;AAGLC,IAAAA,wBAAwB,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBF,MAAAA,IAAI,EAAEP,OAAO,CAACO;AAAjC;AAHrB,GAAD,CAAR;AAMH,CATM,C,CAWP;AACA;;AAEA,OAAO,MAAMG,aAAa,GAAIP,EAAD,IAAQ,MAAMJ,QAAN,IAAkB;AACnD,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,0CAAyCE,EAAG,EAAvD,CAAtB;AAEAJ,EAAAA,QAAQ,CAAC;AACLK,IAAAA,IAAI,EAAEP,WAAW,CAACc,eADb;AAELC,IAAAA,aAAa,EAAEZ,OAAO,CAACO;AAFlB,GAAD,CAAR;AAIH,CAPM,C,CAUP;AACA;;AACA,OAAO,MAAMM,cAAc,GAAIV,EAAD,IAAQ,MAAMJ,QAAN,IAAkB;AACpD,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,0CAAyCE,EAAG,EAAvD,CAAtB;AAEAJ,EAAAA,QAAQ,CAAC;AACLK,IAAAA,IAAI,EAAEP,WAAW,CAACiB,wBADb;AAELN,IAAAA,wBAAwB,EAAE;AAAEC,MAAAA,IAAI,EAAET,OAAO,CAACO,IAAR,CAAaJ,EAArB;AAAyBI,MAAAA,IAAI,EAAEP,OAAO,CAACO;AAAvC;AAFrB,GAAD,CAAR;AAKH,CARM","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\n\n//===================================================================================//\n//===================================================================================//\n\nexport const setCryptoData = () => async dispatch => {\n    const payload = await axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=1&sparkline=false&price_change_percentage=24h\");\n    const getStartUpData = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`)\n    dispatch({\n        type: actionTypes.SET_CRYPTO_DATA,\n        newCryptoDataArr: payload.data,\n        newSelectedCryptoDisplay: { name: 'bitcoin', data: payload.data },\n    })\n\n}\n\n//===================================================================================//\n//===================================================================================//\n\nexport const addCryptoData = (id) => async dispatch => {\n    const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n\n    dispatch({\n        type: actionTypes.ADD_CRYPTO_DATA,\n        newCryptoData: payload.data\n    })\n}\n\n\n//===================================================================================//\n//===================================================================================//\nexport const showCryptoData = (id) => async dispatch => {\n    const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n\n    dispatch({\n        type: actionTypes.SHOW_CRYPTO_DATA_DISPLAY,\n        newSelectedCryptoDisplay: { name: payload.data.id, data: payload.data },\n\n    })\n}"]},"metadata":{},"sourceType":"module"}