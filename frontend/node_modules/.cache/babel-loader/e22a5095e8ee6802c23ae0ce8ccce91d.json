{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\"; //===================================================================================//\n//===================================================================================//\n\nexport const setCryptoData = () => async dispatch => {\n  const payload = await axios.get(\"http://localhost:3001/api/crypto/ranking\"); // const payload = await axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=1&sparkline=false&price_change_percentage=24h\");\n\n  const getStartUpData = await axios.get(`https://api.coingecko.com/api/v3/coins/bitcoin`); // console.log(getStartUpData)\n\n  const getPriceHistory = await axios.get(`https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=1`);\n  console.log(getPriceHistory.data);\n  dispatch({\n    type: actionTypes.SET_CRYPTO_DATA,\n    newCryptoDataArr: payload.data,\n    newSelectedCryptoDisplay: {\n      id: getStartUpData.id,\n      name: 'Bitcoin',\n      data: getStartUpData.data,\n      priceHistory: getPriceHistory.data\n    }\n  });\n}; //===================================================================================//\n//===================================================================================//\n\nexport const addCryptoData = id => async dispatch => {\n  const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n  dispatch({\n    type: actionTypes.ADD_CRYPTO_DATA,\n    newCryptoData: payload.data\n  });\n}; //===================================================================================//\n//===================================================================================//\n\nexport const showCryptoData = id => async dispatch => {\n  const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n  dispatch({\n    type: actionTypes.SHOW_CRYPTO_DATA_DISPLAY,\n    newSelectedCryptoDisplay: {\n      id: payload.data.id,\n      name: payload.data.name,\n      data: payload.data\n    }\n  });\n}; //===================================================================================//\n//===================================================================================//\n\nexport const getCryptoPriceHistory = id => async dispatch => {\n  const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=1`);\n  dispatch({\n    type: actionTypes.GET_CRYPTO_PRICE_HISTORY,\n    newSelectedCryptoDisplay: {\n      priceHistory: payload\n    }\n  });\n};","map":{"version":3,"sources":["/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/store/actions/actionCreators.js"],"names":["axios","actionTypes","setCryptoData","dispatch","payload","get","getStartUpData","getPriceHistory","console","log","data","type","SET_CRYPTO_DATA","newCryptoDataArr","newSelectedCryptoDisplay","id","name","priceHistory","addCryptoData","ADD_CRYPTO_DATA","newCryptoData","showCryptoData","SHOW_CRYPTO_DATA_DISPLAY","getCryptoPriceHistory","GET_CRYPTO_PRICE_HISTORY"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAGA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACjD,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,0CAAV,CAAtB,CADiD,CAEjD;;AACA,QAAMC,cAAc,GAAG,MAAMN,KAAK,CAACK,GAAN,CAAW,gDAAX,CAA7B,CAHiD,CAI7C;;AACJ,QAAME,eAAe,GAAG,MAAMP,KAAK,CAACK,GAAN,CAAW,oFAAX,CAA9B;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAe,CAACG,IAA5B;AACAP,EAAAA,QAAQ,CAAC;AACLQ,IAAAA,IAAI,EAAEV,WAAW,CAACW,eADb;AAELC,IAAAA,gBAAgB,EAAET,OAAO,CAACM,IAFrB;AAGLI,IAAAA,wBAAwB,EAAE;AAAEC,MAAAA,EAAE,EAAET,cAAc,CAACS,EAArB;AAAyBC,MAAAA,IAAI,EAAE,SAA/B;AAA0CN,MAAAA,IAAI,EAAEJ,cAAc,CAACI,IAA/D;AAAqEO,MAAAA,YAAY,EAAEV,eAAe,CAACG;AAAnG;AAHrB,GAAD,CAAR;AAMH,CAdM,C,CAgBP;AACA;;AAEA,OAAO,MAAMQ,aAAa,GAAIH,EAAD,IAAQ,MAAMZ,QAAN,IAAkB;AACnD,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,0CAAyCU,EAAG,EAAvD,CAAtB;AAEAZ,EAAAA,QAAQ,CAAC;AACLQ,IAAAA,IAAI,EAAEV,WAAW,CAACkB,eADb;AAELC,IAAAA,aAAa,EAAEhB,OAAO,CAACM;AAFlB,GAAD,CAAR;AAIH,CAPM,C,CAUP;AACA;;AACA,OAAO,MAAMW,cAAc,GAAIN,EAAD,IAAQ,MAAMZ,QAAN,IAAkB;AACpD,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,0CAAyCU,EAAG,EAAvD,CAAtB;AAEAZ,EAAAA,QAAQ,CAAC;AACLQ,IAAAA,IAAI,EAAEV,WAAW,CAACqB,wBADb;AAELR,IAAAA,wBAAwB,EAAE;AAAEC,MAAAA,EAAE,EAAEX,OAAO,CAACM,IAAR,CAAaK,EAAnB;AAAuBC,MAAAA,IAAI,EAAEZ,OAAO,CAACM,IAAR,CAAaM,IAA1C;AAAgDN,MAAAA,IAAI,EAAEN,OAAO,CAACM;AAA9D;AAFrB,GAAD,CAAR;AAKH,CARM,C,CAWP;AACA;;AACA,OAAO,MAAMa,qBAAqB,GAAIR,EAAD,IAAQ,MAAMZ,QAAN,IAAkB;AAC3D,QAAMC,OAAO,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,0CAAyCU,EAAG,sCAAvD,CAAtB;AAGAZ,EAAAA,QAAQ,CAAC;AACLQ,IAAAA,IAAI,EAAEV,WAAW,CAACuB,wBADb;AAELV,IAAAA,wBAAwB,EAAE;AAAEG,MAAAA,YAAY,EAAEb;AAAhB;AAFrB,GAAD,CAAR;AAKH,CATM","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\n\n//===================================================================================//\n//===================================================================================//\n\nexport const setCryptoData = () => async dispatch => {\n    const payload = await axios.get(\"http://localhost:3001/api/crypto/ranking\");\n    // const payload = await axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=20&page=1&sparkline=false&price_change_percentage=24h\");\n    const getStartUpData = await axios.get(`https://api.coingecko.com/api/v3/coins/bitcoin`)\n        // console.log(getStartUpData)\n    const getPriceHistory = await axios.get(`https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=1`)\n\n    console.log(getPriceHistory.data)\n    dispatch({\n        type: actionTypes.SET_CRYPTO_DATA,\n        newCryptoDataArr: payload.data,\n        newSelectedCryptoDisplay: { id: getStartUpData.id, name: 'Bitcoin', data: getStartUpData.data, priceHistory: getPriceHistory.data },\n    })\n\n}\n\n//===================================================================================//\n//===================================================================================//\n\nexport const addCryptoData = (id) => async dispatch => {\n    const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n\n    dispatch({\n        type: actionTypes.ADD_CRYPTO_DATA,\n        newCryptoData: payload.data\n    })\n}\n\n\n//===================================================================================//\n//===================================================================================//\nexport const showCryptoData = (id) => async dispatch => {\n    const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}`);\n\n    dispatch({\n        type: actionTypes.SHOW_CRYPTO_DATA_DISPLAY,\n        newSelectedCryptoDisplay: { id: payload.data.id, name: payload.data.name, data: payload.data },\n\n    })\n}\n\n\n//===================================================================================//\n//===================================================================================//\nexport const getCryptoPriceHistory = (id) => async dispatch => {\n    const payload = await axios.get(`https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=usd&days=1`)\n\n\n    dispatch({\n        type: actionTypes.GET_CRYPTO_PRICE_HISTORY,\n        newSelectedCryptoDisplay: { priceHistory: payload }\n    })\n\n}"]},"metadata":{},"sourceType":"module"}