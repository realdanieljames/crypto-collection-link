[{"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/index.js":"1","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/App.js":"2","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/reportWebVitals.js":"3","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/store/reducers/cryptoDataReducer.js":"4","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/Navbar/Navbar.js":"5","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CryptoRankingPage/CryptoRankingPage.js":"6","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/store/actions/actionTypes.js":"7","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/store/actions/actionCreators.js":"8","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CryptoDataDisplay/CryptoDataDisplay.js":"9","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/Login/Login.js":"10","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CreateNewAccount/CreateNewAccount.js":"11","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CurrencyConverter/CurrencyConverter.js":"12","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CryptoChart/CryptoChart.js":"13","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/UserProfile/UserProfile.js":"14","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/Search/Search.js":"15","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/Search/docs/data.js":"16"},{"size":915,"mtime":1617987621700,"results":"17","hashOfConfig":"18"},{"size":826,"mtime":1619112492408,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1617909909456,"results":"20","hashOfConfig":"18"},{"size":4396,"mtime":1619127369694,"results":"21","hashOfConfig":"18"},{"size":1724,"mtime":1619018756886,"results":"22","hashOfConfig":"18"},{"size":3861,"mtime":1619127544527,"results":"23","hashOfConfig":"18"},{"size":281,"mtime":1619112567019,"results":"24","hashOfConfig":"18"},{"size":3981,"mtime":1619131973575,"results":"25","hashOfConfig":"18"},{"size":4526,"mtime":1619045416622,"results":"26","hashOfConfig":"18"},{"size":5361,"mtime":1619016661282,"results":"27","hashOfConfig":"18"},{"size":5290,"mtime":1619031146432,"results":"28","hashOfConfig":"18"},{"size":3561,"mtime":1619116072450,"results":"29","hashOfConfig":"18"},{"size":3461,"mtime":1619110610872,"results":"30","hashOfConfig":"18"},{"size":836,"mtime":1618948582551,"results":"31","hashOfConfig":"18"},{"size":5189,"mtime":1619135576038,"results":"32","hashOfConfig":"18"},{"size":4383,"mtime":1619024319347,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1hi5gwe",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/index.js",[],["73","74"],"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/App.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/reportWebVitals.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/store/reducers/cryptoDataReducer.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/Navbar/Navbar.js",["75"],"import React from \"react\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\n\nimport CreateNewAccount from \"../CreateNewAccount/CreateNewAccount\";\nimport Login from \"../Login/Login\";\nimport UserProfile from \"../UserProfile/UserProfile\";\nimport Search from \"../Search/Search\"\n\nconst Navbar = () => {\n  return (\n    // <Router>\n    <div>\n      <nav className=\"header__navigator\">\n        <p className=\"header__logo\">\n          <Link className=\"link\" to=\"/\">\n            {\" \"}\n            CRYPTO COLLECTION. <br />\n            LINK\n          </Link>\n        </p>\n      <Search/>\n        <div className=\"registration__buttons\">\n          {/* <Link className=\"link\" to=\"/login\"> */}\n            <Login />\n          {/* </Link> */}\n\n          {/* <Link className=\"link\" to=\"/register\"> */}\n            <CreateNewAccount />\n          {/* </Link> */}\n      {/* <Link className=\"link\" to=\"/profile\" > */}\n      \n      {/* <UserProfile/> */}\n      {/* </Link> */}\n        </div>\n      </nav>\n\n      <div>\n        <nav className=\"router__tabs\">\n          <Link className=\"link\" to=\"/collection\">\n            <div className=\"my__collection__tab\">\n              <span className=\"tab__text\"> My Collection</span>\n            </div>\n          </Link>\n\n          <Link className=\"link\" to=\"/watchlist\">\n            <div className=\"my__watchlist__tab\">\n              <span className=\"tab__text\">My Watchlist</span>\n            </div>\n          </Link>\n\n          <Link className=\"link\" to=\"/shop\">\n            <div className=\"shop__tab\">\n              <span className=\"tab__text\">Get T-Shirt</span>\n            </div>\n          </Link>\n        </nav>\n      </div>\n    </div>\n    /* </Router> */\n  );\n};\n\nexport default Navbar;\n","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CryptoRankingPage/CryptoRankingPage.js",["76","77","78"],"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/store/actions/actionTypes.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/store/actions/actionCreators.js",[],"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CryptoDataDisplay/CryptoDataDisplay.js",["79","80","81","82"],"import React, { useEffect } from \"react\";\nimport \"./CryptoDataDisplay.css\";\nimport { connect } from \"react-redux\";\n\nimport {\n  setCryptoData,\n  // addCryptoData,\n  showCryptoData,\n  getCryptoPriceHistory,\n} from \"../../store/actions/actionCreators\";\nimport CurrencyConverter from \"../CurrencyConverter/CurrencyConverter\";\nimport Chart from \"../CryptoChart/CryptoChart\";\n\n// <script src=\"https://widgets.coingecko.com/coingecko-coin-converter-widget.js\"></script>\n// <coingecko-coin-converter-widget  coin-id=\"bitcoin\" currency=\"usd\" background-color=\"#ffffff\" font-color=\"#4c4c4c\" locale=\"en\"></coingecko-coin-converter-widget>\n\n//===================================================================================//\n//===================================================================================//\n\nconst CryptoDataDisplay = (props) => {\n  useEffect(() => {\n    // props.showCryptoData(props.selectedCryptoDisplay);\n    props.showCryptoData(); \n  }, []);\n\n  // console.log(props);\n\n  return (\n    <div className=\"crypto__data__display\">\n      {props.cryptoData.map((cryptocurrency) => {\n        if (cryptocurrency.id === props.selectedCryptoDisplay.id) {\n          // console.log(cryptocurrency);\n          // console.log(props.selectedCryptoDisplay.id);\n\n          let selectedCryptoData = props.selectedCryptoDisplay.data;\n\n          return (\n            <div\n              key={cryptocurrency.id}\n              className=\"crypto__data__display__elements\"\n            >\n              {/*======================================================================================================================== */}\n              <div className=\"crypto__data__display__name__logo\">\n                <img\n                  className=\"crypto__data__display__image\"\n                  // src={selectedCryptoData.image.large}\n                  src={cryptocurrency.image}\n                />\n\n                <h2 className=\"crypto__data__display__name\">\n                  {/* {selectedCryptoData.name} */}\n                  {cryptocurrency.name}\n                </h2>\n                <p className=\"crypto__data__display__symbol\">\n                  {/* {selectedCryptoData.symbol.toUpperCase()} */}\n                  {cryptocurrency.symbol.toUpperCase()}\n                </p>\n\n                <p className=\"crypto__data__display__rank\">\n                  Rank #{cryptocurrency.market_cap_rank}\n                </p>\n\n                {/*                <div className=\"crypto__data__display__description\">\n                <h3> What is {selectedCryptoData.name}?</h3>\n                <p >{selectedCryptoData.description.en}</p>\n                </div> */}\n              </div>\n              {/*======================================================================================================================== */}\n              <div className=\"crypto__data__display__numerical__data\">\n                <div className=\"crypto__data__display__current__price\">\n                  $\n                  {/* {selectedCryptoData.market_data.current_price.usd.toLocaleString()} */}\n                  {cryptocurrency.current_price.toLocaleString()}\n                  {/* {selectedCryptoData.market_data.price_change_percentage_24h > 0 ? 'green': 'red'} */}\n                  <span\n                    className=\"crypto__data__display__24h__percentage__change\"\n                    style={{\n                      backgroundColor:\n                        cryptocurrency.price_change_percentage_24h > 0\n                          ? \"green\"\n                          : \"red\",\n                    }}\n                  >\n                    {cryptocurrency.price_change_percentage_24h}%\n                  </span>\n                </div>\n                <div>\n                  {/*======================================================================================================================== */}\n                </div>\n              </div>\n              <CurrencyConverter />\n\n              <Chart />\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\n//===================================================================================//\n//===================================================================================//\nconst mapStateToProps = (state) => {\n  return {\n    cryptoData: state.cryptoData,\n    selectedCryptoDisplay: state.selectedCryptoDisplay,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setCryptoData,\n  // addCryptoData,\n  showCryptoData,\n  getCryptoPriceHistory,\n})(CryptoDataDisplay);\n","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/Login/Login.js",["83","84","85","86","87"],"import {useState} from 'react'\nimport PropTypes from 'prop-types';\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\n\n\n\n//=============================================================================================================//\n//=============================================================================================================//\n\n// async function loginUser(credentials) {\n//   // return fetch('http://127.0.0.1:8080/api/signin', {\n//   return fetch('/api/signin', {\n\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify(credentials)\n//   })\n//     .then(data => data.json())\n    \n//     //  axios.create({\n//     //    baseURL: 'api',\n//     //    timeout: 5000\n//     //  })\n//  }\n\n//=============================================================================================================//\n//=============================================================================================================//\n\n\n\n const Login = () => {\n  const [open, setOpen] = useState(false);\n  const [username, setUserName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  //=============================================================================================================//\n  //=============================================================================================================//\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //=============================================================================================================//\n  //=============================================================================================================//\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n\n    console.log('hello');\n    \n\n\n    try {\n        let success = await axios.post(\"http://localhost:3001/api/users/login\", {\n\n        // username: username,\n        email:email,\n        password:password\n            // email: emailRef.current.value,\n            // password: passwordRef.current.value,\n        })\n        console.log(success)\n\n        // console.log(success.data.token);\n        window.localStorage.setItem(\"jwtToken\", success.data.token)\n        // props.history.push('/rankings')\n    } catch (error) {\n\n        console.log(error);\n        // setErrorMessage(true)\n    } \n    // return await loginUser({\n    //   username,\n    //   email,\n    //   password\n    // }\n    // );\n    // setToken(token);\n    // await axios.post('127.0.0.1:8080/api/signin', signin)\n\n  }\n//=============================================================================================================//\n//=============================================================================================================//\n\nreturn (\n    <div>\n\n    <span className=\"login__button\" onClick={handleClickOpen}>Login</span>\n \n      <Dialog open={open} onClose={handleClose}  aria-labelledby=\"form-dialog-title\"\n       fullWidth={true} maxWidth='xs'\n      >\n\n\n        <DialogContent>\n          <DialogTitle id=\"form-dialog-title\"><h1> Log In </h1> <h3>Sign In to an existing account.</h3></DialogTitle>\n          \n          {/* <DialogContentText>\n            <h3>New to Crypto Collection? <a href=\"\">Create an Account here.</a></h3>\n\n          </DialogContentText> */}\n\n          <TextField\n            variant='outlined'\n            margin=\"dense\"\n            id=\"username\"\n            label=\"Username or Email\"\n            type=\"email\"\n            fullWidth\n            onChange={e => setUserName(e.target.value)}\n          />\n\n          {/* <hr/> */}\n          {/* <TextField\n            variant='outlined'\n            margin=\"dense\"\n            id=\"email\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            onChange={e => setEmail(e.target.value)}\n          /> */}\n          {/* <hr/> */}\n          <TextField\n            variant='outlined'\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"email\"\n            fullWidth\n            onChange={e => setPassword(e.target.value)}\n          />\n        \n\n            <DialogContentText>\n            <h3>New to Crypto Collection? <a href=\"\">Create an Account here.</a></h3>\n\n          </DialogContentText>\n\n\n        </DialogContent> \n\n\n\n        \n\n        <DialogActions>\n          {/* <button  style={{backgroundColor: 'gold', fontSize:'15px', borderRadius:'7px', padding: '10px'}} onClick={handleClose} >\n          ❌ Cancel\n          </button> */}\n          <button style={{backgroundColor: 'yellow',  fontSize:'15px', borderRadius:'7px', padding: '10px'}} \n            onClick={handleSubmit} >\n           Login 🔑 🚪\n          </button>\n        </DialogActions>\n   \n      </Dialog>\n    </div>\n    // </div>\n  );\n};\n\n\n// Login.propTypes = {\n//   setToken: PropTypes.func.isRequired\n// }\n\n\n\n\nexport default Login;","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CreateNewAccount/CreateNewAccount.js",["88","89","90","91","92","93"],"import {useState, useRef} from 'react'\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport validator from 'validator'\n\n\n\n\n const CreateNewAccount = () => {\n  const [open, setOpen] = useState(false);\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const userNameRef = useRef()\n  const [emailError, setEmailError] = useState(false)\n\n\n  const [username, setUserName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  //=============================================================================================================//\n  //=============================================================================================================//\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  //=============================================================================================================//\n  //=============================================================================================================//\n const createAccountSubmitButton = async (e)=>{\n     \n    e.preventDefault()\n    console.log(e)\n    // if(!validator.isEmail(emailRef.current.value)){\n    //     setEmailError(true)\n    //     return\n    // }else {\n    //     setEmailError(false)\n    // }\n\n    try {\n        console.log('hello');\n        console.log(emailRef.current.value)\n        \n        let success = await axios.post(\"http://localhost:3001/api/users/register\", {\n        username: username,\n          email: email,\n          password: password,\n        //   email: emailRef.current.value,\n        //   password: passwordRef.current.value,\n        //   username: userNameRef.current.value,\n      })\n        console.log(success);\n        //  if(success.status === 200){\n        //      alert('Success, please proceed to login.')\n        //  }\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n\n\nreturn (\n    <div>\n\n        <span className=\"create__account__button\" onClick={handleClickOpen}>Create New Account </span>\n\n      <Dialog open={open} onClose={handleClose} fullWidth={true} maxWidth='xs'  aria-labelledby=\"form-dialog-title\">\n        \n        <DialogContent>\n          <DialogTitle id=\"form-dialog-title\"><h1>Create an Account</h1><h3>It's quick and easy.</h3> </DialogTitle>\n          {/* <DialogContentText> */}\n       \n          {/* </DialogContentText> */}\n          {/* <hr/> */}\n\n\n{/* //=============================================================================================================// */}\n{/* //=============================================================================================================// */}\n          <TextField\n            // autoFocus\n            // size='normal'\n            variant='outlined'\n            margin=\"dense\"\n            id=\"username\"\n            label=\"Username\"\n            // type=\"email\"\n            fullWidth\n            inputRef={userNameRef}\n            onChange={e => setUserName(e.target.value)}\n          />\n\n          {/* <hr/> */}\n          <TextField\n\n            // size='normal'\n            variant='outlined'\n            margin=\"dense\"\n            id=\"email\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            inputRef={emailRef}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <br/>\n          <TextField\n            // size='normal'\n            variant='outlined'\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            inputRef={passwordRef}\n            onChange={e => setPassword(e.target.value)}\n          />\n          <TextField\n            // size='normal'\n            variant='outlined'\n            margin=\"dense\"\n            id=\"confirm password\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            fullWidth\n            \n          />\n          {/* <hr/> */}\n\n        <h3>Already have an account? <a href=\"\">Click here to Log In.</a></h3>\n        </DialogContent>\n        {/* <hr/>\n      <hr/>\n      <hr/>\n      <hr/> */}\n\n{/* //=============================================================================================================// */}\n{/* //=============================================================================================================// */}\n\n        <DialogActions>\n          {/* <button  style={{backgroundColor: 'yellow', fontSize:'15px', borderRadius:'7px', padding: '10px', color: 'black'}} onClick={handleClose} >\n           {'<<<< ❌ Sign up Later'}\n          </button> */}\n          <button style={{backgroundColor: 'yellow',  fontSize:'15px', borderRadius:'7px', padding: '10px'}} onClick={createAccountSubmitButton} >\n            Create Account ➕\n          </button>\n        </DialogActions>\n\n      </Dialog>\n    </div>\n\n\n\n  );\n};\n\nexport default CreateNewAccount;","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CurrencyConverter/CurrencyConverter.js",["94"],"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/CryptoChart/CryptoChart.js",["95","96"],"import React, {useRef, useEffect} from \"react\";\nimport Chart from \"chart.js/auto\";\nimport {connect} from \"react-redux\";\nimport {\n    setCryptoData,\n    // addCryptoData,\n    showCryptoData,\n    getCryptoPriceHistory\n    } from \"../../store/actions/actionCreators\";\n\n\nconst CryptoChart = (props) => {\n\n    \n    const prices =()=> props.selectedCryptoDisplay.priceHistory.map((price)=>{\n\n        return price[1]\n    })\n    const dates =()=> props.selectedCryptoDisplay.priceHistory.map((date)=>{\n        const milliseconds = date[0] * 1000\n        const dateObject = new Date(milliseconds)\n        const humanDateFormat = dateObject.toLocaleString()\n        \n        // return date[0]\n        return humanDateFormat\n    })\n    \n\n    const chartRef = useRef()\n    \n            // props.getCryptoPriceHistory(props.selectedCryptoDisplay.name)\n\n    useEffect(()=>{\n        props.getCryptoPriceHistory(props.selectedCryptoDisplay.data.id);\n\n\n// const prices = props.selectedCryptoDisplay.priceHistory.map((price)=>{\n//     return price[1]\n// })\n// const dates = props.selectedCryptoDisplay.priceHistory.map((date)=>{\n//     return date[0]\n// })\n\n\n\n\n        if(chartRef && chartRef.current){\n            const chartInstance = new Chart (chartRef.current, \n                {\n                    type: 'line',\n                    data: {\n                        // labels: cryptoDatesArray(),\n                        labels: dates(),\n                        datasets: [{\n                            label: `${props.selectedCryptoDisplay.name} / United States Dollar\n                                        ${props.selectedCryptoDisplay.data.symbol.toUpperCase()} /  USD`, \n                            // data: [12, 19, 3, 5, 2, 3],\n                            data: prices(),\n                            backgroundColor: [\n                                'rgba(255, 99, 132, 0.2)',\n                                'rgba(54, 162, 235, 0.2)',\n                                'rgba(255, 206, 86, 0.2)',\n                                'rgba(75, 192, 192, 0.2)',\n                                'rgba(153, 102, 255, 0.2)',\n                                'rgba(255, 159, 64, 0.2)'\n                            ],\n                            borderColor: [\n                                'rgba(255, 99, 132, 1)',\n                                'rgba(54, 162, 235, 1)',\n                                'rgba(255, 206, 86, 1)',\n                                'rgba(75, 192, 192, 1)',\n                                'rgba(153, 102, 255, 1)',\n                                'rgba(255, 159, 64, 1)'\n                            ],\n                            borderWidth: 1\n                        }]\n                    },\n                    options: {\n                        scales: {\n                            y: {\n                                beginAtZero: true\n                            }\n                        }\n                    }\n                }\n                )\n                // chartInstance.destroy()\n\n            }\n    },[])\n  return (\n    <div className=\"crypto__data__display__chart\">\n      <canvas id=\"myChart\" width='300' height=\"160\" ref={chartRef}></canvas>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state)=> {\n    return {\n        cryptoData: state.cryptoData,\n        selectedCryptoDisplay:state.selectedCryptoDisplay\n    }\n}\n\nexport default connect(mapStateToProps, {setCryptoData, showCryptoData, getCryptoPriceHistory})(CryptoChart);\n","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/UserProfile/UserProfile.js",["97"],"import React from \"react\";\nimport './UserProfile.css'\n\nconst UserProfile = () => {\n  return (\n    <div>\n      <div>\n        <button>Click here!</button>\n      </div>\n\n      <div className=\"user__profile__container\">\n        <div className=\"user__profile__stats\">\n            <img/>\n            <h1>Profile Name</h1>\n            <h3>Following <br/>100</h3>\n            <h3>Followers <br/>100</h3>\n\n            <h2>Collection Rank #:1</h2>\n            <h2>Highest Rank #:1</h2>\n            <h2>Lowest Rank #:1</h2>\n        </div>\n\n        <div className=\"user__profile__feed\">\n\n        </div>\n\n        <div className=\"user__crypto__collection\">\n        <h1>\n            Collection Value \n        </h1>\n        <h1>\n            $4,419,000\n        </h1>\n        </div>\n        \n\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n","/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/Search/Search.js",["98","99","100"],"/Users/danieljames/CodeImmersives-WebDev/Projects/crypto-collection-link/frontend/src/components/Search/docs/data.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":7,"column":8,"nodeType":"107","messageId":"108","endLine":7,"endColumn":19},{"ruleId":"105","severity":1,"message":"109","line":1,"column":28,"nodeType":"107","messageId":"108","endLine":1,"endColumn":34},{"ruleId":"105","severity":1,"message":"110","line":11,"column":8,"nodeType":"107","messageId":"108","endLine":11,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":22,"column":3,"nodeType":"113","endLine":22,"endColumn":5,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"112","line":24,"column":6,"nodeType":"113","endLine":24,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":30,"column":46,"nodeType":"118","messageId":"119","endLine":30,"endColumn":48},{"ruleId":"105","severity":1,"message":"120","line":35,"column":15,"nodeType":"107","messageId":"108","endLine":35,"endColumn":33},{"ruleId":"121","severity":1,"message":"122","line":44,"column":17,"nodeType":"123","endLine":48,"endColumn":19},{"ruleId":"105","severity":1,"message":"124","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":17},{"ruleId":"105","severity":1,"message":"125","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":14},{"ruleId":"105","severity":1,"message":"126","line":44,"column":10,"nodeType":"107","messageId":"108","endLine":44,"endColumn":18},{"ruleId":"105","severity":1,"message":"127","line":45,"column":17,"nodeType":"107","messageId":"108","endLine":45,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":154,"column":43,"nodeType":"123","endLine":154,"endColumn":54},{"ruleId":"105","severity":1,"message":"125","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"130","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":25},{"ruleId":"105","severity":1,"message":"131","line":10,"column":8,"nodeType":"107","messageId":"108","endLine":10,"endColumn":17},{"ruleId":"105","severity":1,"message":"132","line":20,"column":10,"nodeType":"107","messageId":"108","endLine":20,"endColumn":20},{"ruleId":"105","severity":1,"message":"133","line":20,"column":22,"nodeType":"107","messageId":"108","endLine":20,"endColumn":35},{"ruleId":"128","severity":1,"message":"129","line":143,"column":38,"nodeType":"123","endLine":143,"endColumn":49},{"ruleId":"105","severity":1,"message":"134","line":1,"column":25,"nodeType":"107","messageId":"108","endLine":1,"endColumn":34},{"ruleId":"105","severity":1,"message":"135","line":48,"column":19,"nodeType":"107","messageId":"108","endLine":48,"endColumn":32},{"ruleId":"111","severity":1,"message":"136","line":90,"column":7,"nodeType":"113","endLine":90,"endColumn":9,"suggestions":"137"},{"ruleId":"121","severity":1,"message":"122","line":13,"column":13,"nodeType":"123","endLine":13,"endColumn":19},{"ruleId":"105","severity":1,"message":"138","line":7,"column":10,"nodeType":"107","messageId":"108","endLine":7,"endColumn":23},{"ruleId":"111","severity":1,"message":"139","line":13,"column":5,"nodeType":"113","endLine":13,"endColumn":7,"suggestions":"140"},{"ruleId":"116","severity":1,"message":"117","line":48,"column":47,"nodeType":"118","messageId":"119","endLine":48,"endColumn":49},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'UserProfile' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'cryptoDataReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["143"],["144"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'selectedCryptoData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PropTypes' is defined but never used.","'Button' is defined but never used.","'username' is assigned a value but never used.","'setEmail' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DialogContentText' is defined but never used.","'validator' is defined but never used.","'emailError' is assigned a value but never used.","'setEmailError' is assigned a value but never used.","'useEffect' is defined but never used.","'chartInstance' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dates', 'prices', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["145"],"'colourOptions' is defined but never used.","React Hook useEffect has a missing dependency: 'searchFilter'. Either include it or remove the dependency array.",["146"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"147","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [props]",{"range":"154","text":"155"},{"range":"156","text":"155"},"Update the dependencies array to be: [dates, prices, props]",{"range":"157","text":"158"},"Update the dependencies array to be: [searchFilter]",{"range":"159","text":"160"},[702,704],"[props]",[957,959],[3034,3036],"[dates, prices, props]",[386,388],"[searchFilter]"]